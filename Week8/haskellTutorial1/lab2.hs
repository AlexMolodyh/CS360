--2.2
lab2P2 = [x | x <- [1..100], x `mod` 2 == 1]
--answer: 2725392139750729502980713245400918633290796330545803413734328823443106201171875

--2.3
lab2P3 = maximum (drop 1 ( init [99,23,4,2,67,82,49,-40]))
--answer: 82

--2.4
lab2P4 = 1:3:(-5):20:8:[]
--answer: [1,3,-5,20,8]

--2.5
---2.5.1
lab2P51 = [x | x <- [1..27], even x]
--answer: [2,4,6,8,10,12,14,16,18,20,22,24,26]

---2.5.2
lab2P52 = [x | x <- [1..300], x < 200, x `mod` 7 == 0, x `mod` 3 == 0]
--answer: [21,42,63,84,105,126,147,168,189]

---2.5.3
lab2P53 = [x | x <- [100..200], odd x, x `mod` 9 == 0]
--answer: 5

---2.5.5
lab2P55 = length [x | x <- [2, -3, -2, -8, 5, 3, -38], x < 0]
--answer: 4

--2.6 Uncmment to test code in terminal ||
                                    --- \/
--let hex = ['0'..'9'] ++ ['A'..'F']
--zip [0..15] hex
--answer: [(0,'0'),(1,'1'),(2,'2'),(3,'3'),(4,'4'),(5,'5'),(6,'6'),(7,'7'),(8,'8'),(9,'9'),(10,'A'),(11,'B'),(12,'C'),(13,'D'),(14,'E'),(15,'F')]
--